{
	"info": {
		"_postman_id": "8f5809e8-30fb-4c20-8280-8d4537032fe3",
		"name": "Personal Expense AG",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "37985286",
		"_collection_link": "https://cloudy-crater-587875-1.postman.co/workspace/Swarch-project~1681da07-a4b7-4fc8-86c9-fd819042ceec/collection/37985286-8f5809e8-30fb-4c20-8280-8d4537032fe3?action=share&source=collection_link&creator=37985286"
	},
	"item": [
		{
			"name": "Create personal expense",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let response = pm.response.json();\r",
							"let personal_expense_id = response.data.id;\r",
							"\r",
							"pm.collectionVariables.set(\"personal_expense_id\",personal_expense_id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function(){\r",
							"    pm.response.to.have.status(201);\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token_user_1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"concept\" : \"Compra de alimentos\",\r\n  \"total\": 120,\r\n  \"date\": \"2025-07-01\",\r\n  \"type\": \"HOGAR\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/personal-expenses",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"personal-expenses"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get personal expenses",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let response = pm.response.json();\r",
							"let num_personal_expenses = response.data.length;\r",
							"\r",
							"pm.test(\"Status code is 200\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"pm.test(\"At least one personal expense\", function(){\r",
							"    pm.expect(num_personal_expenses).to.be.greaterThanOrEqual(1);\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token_user_1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"concept\" : \"Compra de alimentos\",\r\n  \"total\": 120,\r\n  \"date\": \"2025-07-01\",\r\n  \"type\": \"HOGAR\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/personal-expenses/all",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"personal-expenses",
						"all"
					]
				}
			},
			"response": []
		},
		{
			"name": "Edit personal expense",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let response = pm.response.json();\r",
							"let personal_expense_id = response.data.id;\r",
							"\r",
							"pm.test(\"Status code is 200\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"pm.test(\"The updated expense is retreived back\", function() {\r",
							"    pm.expect(personal_expense_id).to.be.equal(pm.collectionVariables.get(\"personal_expense_id\"));\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token_user_1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"concept\" : \"Compra de alimentos editado\",\r\n  \"total\": 150,\r\n  \"date\": \"2025-07-01\",\r\n  \"type\": \"HOGAR\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/personal-expenses/{{personal_expense_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"personal-expenses",
						"{{personal_expense_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete personal expense",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function(){\r",
							"    pm.response.to.have.status(204);\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token_user_1}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"concept\" : \"Compra de alimentos editado\",\r\n  \"total\": 150,\r\n  \"date\": \"2025-07-01\",\r\n  \"type\": \"HOGAR\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/personal-expenses/{{personal_expense_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"personal-expenses",
						"{{personal_expense_id}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "token_user_1",
			"value": "",
			"type": "string"
		},
		{
			"key": "personal_expense_id",
			"value": ""
		}
	]
}