# worker_processes 1;

# events {
#     worker_connections 1024;
# }

# http {
#     log_format full_log '[$time_local] $remote_addr -> $upstream_addr '
#                         '"$request" $status $body_bytes_sent '
#                         '"$http_referer" "$http_user_agent" '
#                         'Host="$host" '
#                         'Auth="$http_authorization" '
#                         'X-Real-IP="$http_x_real_ip" '
#                         'X-Forwarded-For="$http_x_forwarded_for" '
#                         'X-Forwarded-Proto="$http_x_forwarded_proto"';

#     access_log /var/log/nginx/access.log full_log;

#     upstream users_backend {
#         least_conn;
#         server lg-users-ms-1:8082 max_fails=3 fail_timeout=30s;
#         server lg-users-ms-2:8082 max_fails=3 fail_timeout=30s;
#         server lg-users-ms-3:8082 max_fails=3 fail_timeout=30s;
#     }

#     server {
#         listen 80;

#         location / {
#             proxy_pass http://users_backend;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#             proxy_set_header Authorization $http_authorization;
#             proxy_connect_timeout 1s;
#             proxy_read_timeout 3s;
#             proxy_send_timeout 3s;
#             proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
#         }
#     }
# }

events {
    worker_connections 1024;
}

http {
    upstream gke_users_cluster {
        # Reemplazaremos esta IP despu√©s
        server 127.0.0.1:8999;
    }
    
    server {
        listen 80;
        
        location / {
            proxy_pass http://gke_users_cluster;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        
        location /health {
            return 200 "waiting for gke\n";
            add_header Content-Type text/plain;
        }
    }
}