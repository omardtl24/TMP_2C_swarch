services:
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: dev.Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/app:/app/app
      - ./frontend/public:/app/public
    env_file:
      - ./frontend/.env
    restart: always

  logic-users:
    container_name: logic-users
    build:
      context: ./logic-users
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    env_file:
      - ./logic-users/.env
    depends_on:
      - data_mongo
      - data_postgres
    restart: always

  logic-community:
    container_name: logic-community
    build:
      context: ./logic-community
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    env_file:
      - ./logic-community/.env
    depends_on:
      - data_mongo
      - data_postgres
    restart: always

  logic-personal:
    container_name: logic-personal
    build:
      context: ./logic-personal
      dockerfile: Dockerfile
    ports:
      - "8084:8084"
    env_file:
      - ./logic-personal/.env
    depends_on:
      - data_mongo
      - data_postgres
    restart: always

  data_mongo:
    container_name: MongoDB
    image: mongo:8.0.9
    ports:
      - "27017:27017"
    env_file:
      - ./data_mongo.env
    volumes:
      - mongo_data:/data/db
    restart: unless-stopped

  data_postgres:
    container_name: PostgresDB
    image: postgres:alpine3.20
    ports:
      - "5432:5432"
    env_file:
      - ./data_postgres.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  adminer:
    container_name: Adminer
    image: adminer
    ports:
      - "8081:8080"
    restart: always
    depends_on:
      - data_postgres

volumes:
  mongo_data:
    driver: local
  postgres_data:
    driver: local