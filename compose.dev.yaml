
# docker compose -f compose.dev.yaml up --build
#Realizar inits para cada DB dependiendo de la necesidad de back
services:
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: dev.Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/app:/app/app
      - ./frontend/public:/app/public
      # Puedes agregar más volúmenes si necesitas hot reload de otros archivos
    restart: always
    # environment:
    #   ENV_VARIABLE: valor
    #   NEXT_PUBLIC_ENV_VARIABLE: valor
    # env_file:
    #   - .env
  data_mongo:
    container_name: MongoDB
    image: mongo:8.0.9
    build:
      context: ./data/mongo
      dockerfile: Dockerfile
    
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      # These are for the root user of MongoDB itself.
      # Docker Compose will substitute these with values from the .env file.
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      # Esto va en backend MONGO_INITIAL_DB: ${MONGO_DB_SCHEMA}
    volumes:
      - mongo_data:/data/db


  data_postgres_users:
    container_name: PostgresDB_Users
    #image: postgres:alpine3.20
    build:
      context: ./data/postgres/users
      dockerfile: Dockerfile
    
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      # These are used by the PostgreSQL entrypoint script.
      # Docker Compose will substitute these with values from the .env file.
      POSTGRES_USER: ${POSTGRES_SUPERUSER_USER}
      POSTGRES_PASSWORD: ${POSTGRES_SUPERUSER_PASSWORD_USER}
      #POSTGRES_DB: ${POSTGRES_INITIAL_DB}
    volumes:
      - postgres_data_user:/var/lib/postgresql/data
    #networks:
     # - db_network

  data_postgres_community:
    container_name: PostgresDB_Community
    #image: postgres:alpine3.20
    build:
      context: ./data/postgres/community
      dockerfile: Dockerfile
    
    restart: unless-stopped
    ports:
      - "5433:5433"
    environment:
      POSTGRES_USER: ${POSTGRES_SUPERUSER_COMMUNITY}
      POSTGRES_PASSWORD: ${POSTGRES_SUPERUSER_PASSWORD_COMMUNITY}
      #POSTGRES_DB: ${POSTGRES_INITIAL_DB}
    volumes:
      - postgres_data_community:/var/lib/postgresql/data
    #networks:
     # - db_network

  data_postgres_personal:
    container_name: PostgresDB_Personal
    #image: postgres:alpine3.20
    build:
      context: ./data/postgres/personal
      dockerfile: Dockerfile
    
    restart: unless-stopped
    ports:
      - "5434:5434"
    environment:
      POSTGRES_USER: ${POSTGRES_SUPERUSER_PERSONAL}
      POSTGRES_PASSWORD: ${POSTGRES_SUPERUSER_PASSWORD_PERSONAL}
      #POSTGRES_DB: ${POSTGRES_INITIAL_DB}
    volumes:
      - postgres_data_personal:/var/lib/postgresql/data
    #networks:
     # - db_network

volumes:
  mongo_data:
    driver: local
  postgres_data_user:
    driver: local
  postgres_data_community:
    driver: local
  postgres_data_personal:
    driver: local  
#networks:
  #db_network:
   # driver: bridge
