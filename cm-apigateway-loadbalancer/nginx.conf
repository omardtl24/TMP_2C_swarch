worker_processes 1;

events {
    worker_connections 1024;
}

http {
    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=60r/s; # en base a al punto de rodilla, que seria 1200 peticiones en 15 segundos.
    # lo que seria un rate de 80 r/s, se define un poco mas bajo de este limite
    limit_req_zone $binary_remote_addr zone=burst_limit:10m rate=20r/s;
    
    # Auth-specific rate limiting (more restrictive)
    limit_req_zone $binary_remote_addr zone=auth_limit:10m rate=50r/s;
    limit_req_zone $binary_remote_addr zone=auth_burst:10m rate=3r/s;
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=conn_limit:10m;

    log_format full_log '[$time_local] $remote_addr -> $upstream_addr '
                        '"$request" $status $body_bytes_sent '
                        '"$http_referer" "$http_user_agent" '
                        'Host="$host" '
                        'Auth="$http_authorization" '
                        'X-Real-IP="$http_x_real_ip" '
                        'X-Forwarded-For="$http_x_forwarded_for" '
                        'X-Forwarded-Proto="$http_x_forwarded_proto"';

    access_log /var/log/nginx/access.log full_log;

    upstream apigateway_backend {
        least_conn;
        server cm-apigateway-orch-1:8000 max_fails=3 fail_timeout=30s;
        server cm-apigateway-orch-2:8000 max_fails=3 fail_timeout=30s;
        server cm-apigateway-orch-3:8000 max_fails=3 fail_timeout=30s;
    }

    server {
        listen 80;

        # Apply general rate limiting
        limit_req zone=api_limit burst=10 nodelay;
        limit_req zone=burst_limit burst=5 nodelay;
        limit_conn conn_limit 10;

        # Auth routes with stricter rate limiting
        location ~* ^/(auth) {
            limit_req zone=auth_limit burst=3 nodelay;
            limit_req zone=auth_burst burst=1 nodelay;
            limit_conn conn_limit 5;
            limit_req_status 429;
            limit_conn_status 429;
            
            proxy_pass http://apigateway_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Authorization $http_authorization;
            proxy_connect_timeout 1s;
            proxy_read_timeout 3s;
            proxy_send_timeout 3s;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        }

        location / {
            limit_req_status 429;
            limit_conn_status 429;
            proxy_pass http://apigateway_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Authorization $http_authorization;
            proxy_connect_timeout 1s;
            proxy_read_timeout 3s;
            proxy_send_timeout 3s;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        }

        error_page 429 /rate_limit_exceeded.html;
        location = /rate_limit_exceeded.html {
            internal;
            return 429 '{"error": "Too many requests", "message": "Rate limit exceeded. Please try again later.", "status": 429}';
            add_header Content-Type application/json;
        }
    }
}
