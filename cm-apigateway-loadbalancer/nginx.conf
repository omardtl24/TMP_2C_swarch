worker_processes 1;

events {
    worker_connections 1024;
}



http {
    # Rate limiting configuration
    # Zona de memoria para almacenar el estado de rate limiting
    # Permite 10 requests por segundo por IP, con burst de hasta 20 requests
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
    
    # Rate limiting más estricto para endpoints de autenticación
    limit_req_zone $binary_remote_addr zone=auth_limit:10m rate=5r/s;
    
    # Log de rate limiting
    limit_req_log_level warn;
    
    log_format full_log '[$time_local] $remote_addr -> $upstream_addr '
                        '"$request" $status $body_bytes_sent '
                        '"$http_referer" "$http_user_agent" '
                        'Host="$host" '
                        'Auth="$http_authorization" '
                        'X-Real-IP="$http_x_real_ip" '
                        'X-Forwarded-For="$http_x_forwarded_for" '
                        'X-Forwarded-Proto="$http_x_forwarded_proto"';

    access_log /var/log/nginx/access.log full_log;

    upstream apigateway_backend {
        least_conn;
        server cm-apigateway-orch-1:8000;
        server cm-apigateway-orch-2:8000;
        server cm-apigateway-orch-3:8000;
    }

    server {
        listen 80;

        # Aplicar rate limiting general
        location / {
            # Rate limiting general - permite burst de hasta 20 requests
            limit_req zone=api_limit burst=20 nodelay;
            
            # Código de respuesta personalizado para rate limiting
            limit_req_status 429;
            
            proxy_pass http://apigateway_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Authorization $http_authorization;
        }
        
        # Rate limiting más estricto para endpoints de autenticación
        location ~* ^/(auth) {
            # Rate limiting estricto para autenticación - burst de solo 5 requests
            limit_req zone=auth_limit burst=5 nodelay;
            limit_req_status 429;
            
            proxy_pass http://apigateway_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Authorization $http_authorization;
        }
        
        # Página de error personalizada para rate limiting
        error_page 429 /rate_limit_exceeded.html;
        location = /rate_limit_exceeded.html {
            internal;
            return 429 '{"error": "Too many requests", "message": "Rate limit exceeded. Please try again later.", "status": 429}';
            add_header Content-Type application/json;
        }
    }
}
